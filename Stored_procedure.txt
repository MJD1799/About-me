***Stored_procedure***

1)
create or replace function GiveCPIStatistics() returns setof record as $$
declare
	rs record;
	cur refcursor;
	counter integer :=0;std integer; cp integer;
	c1 integer := 0;c2 integer := 0;f1 varchar(4);f10 varchar(4);
	c3 integer := 0;c4 integer := 0;f2 varchar(4);f9 varchar(4);
	c5 integer := 0;c6 integer := 0;f3 varchar(4);f8 varchar(4);
	c7 integer := 0;c8 integer := 0;f4 varchar(4);f7 varchar(4);
	c9 integer := 0;c10 integer := 0;f5 varchar(4);f6 varchar(4);
begin
	open cur for select student,cpi from student;
	loop
		fetch cur into std,cp;
		exit when not found;
		if cp>=0 and cp<=1 then
			c1:=c1+1;
			f1:='0-1';
		end if;
		if cp>1 and cp<=2 then
			c2:=c2+1;
			f2:='1-2';
		end if;
		if cp>2 and cp<=3 then
			c3:=c3+1;
			f3:='2-3';
		end if;
		if cp>3 and cp<=4 then
			c4:=c4+1;
			f4:='3-4';
		end if;
		if cp>4 and cp<=5 then
			c5:=c5+1;
			f5:='4-5';
		end if;
		if cp>5 and cp<=6 then
			c6:=c6+1;
			f6:='5-6';
		end if;
		if cp>6 and cp<=7 then
			c7:=c7+1;
			f7:='6-7';
		end if;
		if cp>7 and cp<=8 then
			c8:=c8+1;
			f8:='7-8';
		end if;
		if cp>8 and cp<=9 then
			c9:=c9+1;
			f9:='8-9';
		end if;
		if cp>9 and cp<=10 then
			c10:=c10+1;
			f10:='9-10';
		end if;
	end loop;
	loop
	exit when counter=10;
	select f1,cp1 into rs;
	return next rs;
	if counter=1 then
	f1:=f2;
	c1:=c2;
	end if;
	if counter=2 then
	f1:=f3;
	c1:=c3;
	end if;
	if counter=3 then
	f1:=f4;
	c1:=c4;
	end if;
	if counter=4 then
	f1:=f5;
	c1:=c5;
	end if;
	if counter=5 then
	f1:=f6;
	c1:=c6;
	end if;
	if counter=6 then
	f1:=f7;
	c1:=c7;
	end if;
	if counter=7 then
	f1:=f8;
	c1:=c8;
	end if;
	if counter=8 then
	f1:=f9;
	c1:=c9;
	end if;
	if counter=9 then
	f1:=f10;
	c1:=c10;
	end if;
	counter:=counter+1;
	end loop;
	return;
end $$ language 'plpgsql';
->select * from givecpistatistics() as ff(CpiRange varchar(4),NoOfstudentPlaced integer);

2)
set search_path to finalproject;

create or replace function GetPPOConversionOfcompany(cname varchar(30)) returns real as $$
declare
	cd integer :=0;
	si integer ;
	fte integer ;
	prcent real;
begin
	cd:=0;
	select companyid into cd from company where companyname=name_of_company;
	if cd is null then
		raise notice 'Enter proper comapnyname:: Companyname:% is not found!',name_of_company;
		return -1;
	end if;
	select count(studentid)into si from (offers join selected on(companyid=cid and profileid=pid)) natural join jobprofile where cid=cd and (substring(profilename,2,2)='SI' or substring(profilename,1,4)='(WI)');
select count(studentid) into fte from (select studentid,companyid from student natural join selected join offers  on (cid=companyid and pid=profileid) natural join jobprofile natural join (
(select studentid,cid from (selected join jobprofile on (pid=profileid and ((substring(profilename,2,2)='SI') or substring(profilename,1,4)='(WI)') )))as r
natural join
(select studentid,cid from (selected join jobprofile on (pid=profileid and ((substring(profilename,2,2)='FT') or substring(profilename,2,5)='WI+FT')  )))as s
) as r group by studentid,companyid having count(profilename)=2)as f where companyid=cd;
	
	if si is null or si=0 then
		raise notice 'Company is not providing any internship:';
		return -1;
	end if;
	if fte is null or fte=0 then
	   return 0;
	   end if;
	   raise notice 'SI:%',si;
	   raise notice 'FT:%',fte;
    prcent:=((cast (fte as real))/(cast (si as real)))*100;
	return prcent;
 
end $$ language 'plpgsql';